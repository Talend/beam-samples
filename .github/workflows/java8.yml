name: Java 8
on:
  push:
  pull_request:
  schedule:
    - cron: '0 4 * * *' # Once per day at midnight
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        BEAM_VERSION:
          - 2.27.0
          - 2.29.0-SNAPSHOT
        SPARK3_VERSION:
          - 3.0.1
          - 3.1.1
      fail-fast: false
    steps:
      - name: Checkout jbonofre/beam-samples
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Cache maven artifacts
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build and Run Tests
        run:
          mvn clean verify -Pbeam-release-repo -D"beam.version"="${{ matrix.BEAM_VERSION }}"
      # Run some samples
      - name: Run Avro SQL Pipeline - Direct Runner
        run:
          mvn -pl sql exec:java -D"exec.mainClass"="org.apache.beam.samples.sql.BeamSqlAvroExample" -Pdirect-runner -D"exec.args"="--runner=DirectRunner"
      # Run some samples in linux only for more complex open source runners
      - name: Run Avro SQL Pipeline - Spark Classic Runner (Spark 2)
        if: matrix.os == 'ubuntu-latest'
        run:
          mvn -pl sql exec:java -Dexec.mainClass=org.apache.beam.samples.sql.BeamSqlAvroExample -Pspark-runner -Dexec.args="--runner=SparkRunner"
      - name: Run Avro SQL Pipeline - Spark Classic Runner (Spark 3) "${{ matrix.SPARK3_VERSION }}"
        if: matrix.os == 'ubuntu-latest'
        run:
          mvn -pl sql exec:java -Dexec.mainClass=org.apache.beam.samples.sql.BeamSqlAvroExample -Pspark3-runner -Pbeam-release-repo -D"spark3.version"="${{ matrix.SPARK3_VERSION }}" -Dexec.args="--runner=SparkRunner"
      - name: Run Avro SQL Pipeline - Spark Structured Streaming Runner (Spark 2)
        if: matrix.os == 'ubuntu-latest'
        run:
          mvn -pl sql exec:java -Dexec.mainClass=org.apache.beam.samples.sql.BeamSqlAvroExample -Pspark-runner -Dexec.args="--runner=SparkStructuredStreamingRunner"
      - name: Run Avro SQL Pipeline - Flink Runner
        if: matrix.os == 'ubuntu-latest'
        run:
          mvn -pl sql exec:java -Dexec.mainClass=org.apache.beam.samples.sql.BeamSqlAvroExample -Pflink-runner -Dexec.args="--runner=FlinkRunner"
